// Package NsmmApi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version (devel) DO NOT EDIT.
package NsmmApi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}


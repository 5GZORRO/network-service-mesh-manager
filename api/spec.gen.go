// Package NsmmApi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version (devel) DO NOT EDIT.
package NsmmApi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xZbW/bOBL+KwTvgGsBJU7SorgaKA69bFBk0U2DtMiXtghoaWSzK5MKSSU1Av/3BUnR",
	"Iin6Les4u8B+sylqOPPM2zPUA875tOYMmJJ4+IBlPoEpMT/PhODiCmTNmQS9UIDMBa0V5QwP7WMk2uff",
	"GM4w/CTTujJ7QT/FQzwmCu7JDJVm720DUkGBZEVzQAUHiRhXCH5SqSSeZ7gWvAahKEhPyANWsxrwEEsl",
	"KBvj+TzDWhYVUODh13bb9wwrqvTp+Ipzhb7MajDHBnZ8sPpccHVmD82ccD76AbnSSlxyqdp9/+fFrG/6",
	"52bEQCFeIjUBVAt6RxQgBirEwFh5QAuteTFp4H5yizMszct4iI/fnhwev/nv4fHh8ZvBydu++d37PQQ6",
	"MevAafdlnbSlQMV2r4bm+vLilDMGuQZlCU4WJMpKLqZELyIGUECBFEe5AI0aQdeXFyhfSAohFDDlCm4k",
	"iDsQN7TGQ4yzaLXmQrXr3Fi1APlG8RsBBRVa+yHuI9wXH5tAS6Slonfv0OnH87OLLx0qnS9S+jxOEK8S",
	"mXal32uDTYNlz8kQLRFViORKIiIRQZ/Prq7PrhAXiLRnIMrMWx28FvYIZ2x3Z9+YFWGSeUnEhZjGqp7H",
	"VqZERRFqjN4kKKNwS4Vn4+0t6bgRxI9Ovz79VCAYqQ5cTE0JI2OYAlOpJRdj/RLly0mkaSR29Q4XOWvK",
	"nXdkfEBf3FJgU0CtxtRmfB/WKARYyU1+t1sBEWYSviINyydRFLsIdUf8FpXQNjOZAlGS3GW3y9cbQdg4",
	"XFzqqb6oVFWNJS/fs5mzeqf2zwglbpIIsSNSbosaXrD/k931T0aECG8A2XqgO2zDtLDryC6OKBujlhqF",
	"AW/Ygt+t7T9FVCP91paEPqAKOuTGIEzEriQSrew/wTFo4WuceZzDyl5Xg5aBq8/R5MFo0Apgcjo9IDXF",
	"Gb4DIS24x4dHh0daY14D0w+H+NXh0eEJznBN1MRYN2jxNn/G1iwNnnHvuQb6A7gEk+ZFQaagQEg8/Bp7",
	"s2H0tgFEC2CKlhSE688GBazVxkN824DQ/mVkatDTz84NQIZlp4D9rpG1AWUUPTk66sfSAXpfVS5+ZMuk",
	"CvSNHRgdHOduVYpot4bp9dFrLTXnTAEzSJC6rmhusBj8kPqUB0/Lfwso8RD/a9ANC4N2UhiEY4LxWajt",
	"BV+oWvKGFXZPzWXCBV6Rk9gGGUjlGs1O9I1ZbkLjlt/ntBAJkn/Pxe//w34GKNHAvOe44/1B/MGbsuxs",
	"lXOhGVo1c9Fh3X60P51+/fzpAo14MTMjXquP1eLV/rQ4QOclImjVGEoqAaSYtVOoSyJbwxCVi+eUocYe",
	"Ms+6ajJ4oMXcpmgFCvoh/YtZd0Ft0j8KlNf9DO/cp2eLOyh0HC7M8FCMhoxpzaWkI1qBZlz23e69DN1P",
	"aD5BOW+qAo2gNUlPDAu2Vnj1IYayQ87hGY7w1gHramsKgt3FZbodJyJjYQIoQiu597K4KZwr+5B7sdeP",
	"XAvS7a/rQLTo1a1EM1owh/n3XqQP8oB4bhH3MWPdOAlsGJNq77UjyiZrKAoAQC+8UUY0jFE2fvkMoRQq",
	"paucTwTCsIppwuNyeI07nyyhU6w8AUmwrc+EXEF0FZFKNCKS5qSqZuE8imiRIaokKitOFGXj80s70E4A",
	"dZOFueP6y/nd56TGw4Z/GZ6Ydr5MlpxdFJIM102K7zUrQ+oJ2N+KG6J5ONekWV2Cjp/rEqUawaSBm8H9",
	"At7QPx4HCyVoG5bQpN79mu/gnLD/KN3Iu/aNXji+4q1xc89i7smRnsng5dIuT8sVhaHfDu5q9viWcF2z",
	"7btCe13swdqRJXtwsfdO4d9nSdcHnqEcfEkVuUT5T++jso3Bjgpu1gvW+/EZ+N1pI4SuzM66Xtw8g39I",
	"XwtTtL2CveYjmfZeOM50FX4D9rivUp6MiKes5sm76ccW9A1DJ1Gf36OwFLha3C8Jj0ndlSW4/TSy0fWW",
	"c9DinU1Q+Uil+ZxHqir6ZodAKjKqqJxAgUazNNfazPZtRqEdBfPai6gkWk96MdX/trpRKCfAdbB280vA",
	"HzoXkjyHWgXj/9+0ay3fOiF2b/QJKmx4axNs8ND90Y+3ZzxO0qknZ+trIWdcOx3bC6LoW/raqxw/AvqA",
	"7+q+ZxurU+XY07F3WbP8UmUHpu2+4GRJKXkMyRY3NPP5HwEAAP//PGO+eMQjAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}


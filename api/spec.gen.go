// Package NsmmApi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version (devel) DO NOT EDIT.
package NsmmApi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}


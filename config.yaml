# levels Trace, Debug, Info, Warning, Error, Fatal and Panic
log: Trace

server:
  port: 8080          # Listen port of nsm

database:
  db: "nsmm"          # Default db, it must exist (created by the docker container)
  host: "postgres"    # IP address or service-name of postgres DB
  port: 5432          # postgres port
  username: "root"    # Default postgres username/psw (set by the docker container)
  password: "root"

networks:             
  # First network subnet to be used when creating subnet of NSs, subnets are /28, default 192.168.161.0/28
  start: "192.168.161.0/28"
  # Prefix of SAP network name to be used to select a network where search for the GW port to allocate a FIP, default: test
  gatewayNetworkNamePrefix: "<sap_prefix>"
  # Prefix of (internal) networks to be exposed by the VPN connection, default exposed
  exposedNetworksPrefix: "<network_prefix>"
  # Private Vpn Range for this Domain, it should be different in each domain, default 192.168.1.1/24 - corresponds to the ip_range in VPNaaS Launch()
  # so it should be first address of a subnet, followed by the mask
  privateVpnRange: "<private_VPN_range>"

vim:                  # Vims to be used, they can be type=openstack or type=none for testing
  - name: "<vim_name>"
    type: "<vim_type>"
    identityEndpoint: "<identity_endpoint>"
    username: "<username>"
    password: "<password>"
    tenantID: "<tenant_id>"
    domainID: "<domain_id>"
    floatingNetworkName: "<floating_net_name>"           # Floating network name on the vim to be used as the main floating-net when creating the SAPs
    floatingNetworkID: "<floating_net_ID>"

# Static setting for all VPNaaS managed by this NSMM:
#   it is assumed that all the VPNaaS are executed on the same port
#   and they use the same private vpn subnet ( if not defined default values are 8181, 10.0.0.0/24)
vpnaas:
  vpnaasPort: 8080
  # Extra parameter to test the VPNaaS module, it can be "testbed" (production) or "local" (for testing),
  # if not specified default is: local
  environment: local